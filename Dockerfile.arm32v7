FROM arm32v7/ubuntu:20.04

# Set up TEMP directory
ENV TEMP=/tmp
RUN chmod a+rwx /tmp

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
 bison \
 build-essential \
 clang \
 curl \
 dbus-x11 \
 doxygen \
 gperf \
 git \
 libasound2 \
 libasound2-dev \
 libbluetooth-dev \
 libcap-dev \
 libcups2-dev \
 libdbus-1-dev \
 libgtk2.0-0 \
 libgtk2.0-dev \
 libgtk-3-0 \
 libgtk-3-dev \
 libnotify-bin \
 libnss3 \
 libnss3-dev \
 libxcb-xkb-dev \
 libxml2-dev \
 libxss1 \
 libxtst-dev \
 libxtst6 \
 lsb-release \
 locales \
 mesa-common-dev \
 meson \
 nano \
 python2 \
 python-dbus \
 python-gi \
 python-setuptools \
 python3-dbus \
 python3-gi \
 python3-setuptools \
 python3-pip \
 sudo \
 unzip \
 wget \
 xvfb \
&& rm -rf /var/lib/apt/lists/*

# Install Node.js
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash - \
  && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends nodejs \
  && rm -rf /var/lib/apt/lists/* \
  && npm i -g npm@latest

# Install pip for python2 usage
RUN curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py \
  && python2 get-pip.py  

# crcmod is required by gsutil, which is used for filling the gclient git cache
RUN pip install wheel
RUN pip install -U crcmod

# TODO: We can remove this step once transition to using python3 to run Electron tests is complete.
RUN pip install python-dbusmock==0.20.0

# dbusmock is needed for Electron tests
RUN pip3 install wheel
RUN pip3 install python-dbusmock==0.20.0

ADD tools/xvfb-init.sh /etc/init.d/xvfb
RUN chmod a+x /etc/init.d/xvfb

# Steps needed for CircleCI runner
RUN adduser --uid 1500 --disabled-password --gecos GECOS circleci
RUN mkdir -p /opt/circleci/workdir
RUN chown -R circleci /opt/circleci/workdir
ADD linux/arm64/circleci-launch-agent /opt/circleci

# Build and install libxkbcommon-1.0.0 since it is not available as a package
RUN wget https://xkbcommon.org/download/libxkbcommon-1.0.0.tar.xz
RUN tar -xf libxkbcommon-1.0.0.tar.xz && cd libxkbcommon-1.0.0 && meson setup build && ninja -C build && cd build && meson install && cp *.0.0.0 /lib/arm-linux-gnueabihf

# Link python2 to python
RUN ln -s /usr/bin/python2 /usr/bin/python
